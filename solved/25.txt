
load "functions.m";
  F := Rationals();
  P<[t]> := ProjectiveSpace(F,11);       
  A2<u,v> := AffineSpace(F,2);
  X := Curve(A2,u*v^5 + (u^4 - 2*u^3 - u^2 + 2*u + 1)*v^4 - (2*u^6 - 2*u^4 + 4*u^3 + 2*u^2 - 2)*v^3 + (u^8 + u^7 - 2*u^6 + u^5 - u^4 - u^3 - 2*u^2 - u + 1)*v^2 + (u^8 + u^7 + 2*u^6 + u^5 - 2*u^4 + u^3 - u^2)*v + u^6);
  Xp := ProjectiveClosure(X);
  
  torsData := {@@};
  for p in [2,3] do     
      invs := Invariants(ClassGroup(Curve(Reduction(X,p))));
      torsData := torsData join {@invs@};
      <p,invs>;
  end for;

 "The rational torsion subgroup is a subgroup of", torsBound(torsData); //The rational torsion subgroup is a subgroup of [ 227555 ]
  
basePt:=[0, 0, 1];

pts:=[[0 , -1 , 1], [0 , 1 , 0], [0 , 0 , 1], [1 , 0 , 0]];


p := 3;
  Cp<[T]> := Curve(Reduction(Xp,p));
    pic,mPic := ClassGroup(Cp);    
  basePt := &+Places(Cp!basePt);
  divs := {@
         &+Places(Cp!pt) - Degree(&+Places(Cp!pt))*basePt
         : pt in pts @} ;  
  
  global, mGlobal := 
     sub<pic | [(Inverse(mPic))(divs[i]) : i in [1..#divs]]>;  
  Invariants(global); // [ 227555, 0 ]    


"There are", [#Places(Cp,i) : i in [1..4]], "places of degree 1, 2, 3 and 4 over F_3"; // [ 10, 0, 0, 12 ];    
    // the 10 degree 1 points lift to Q so we compute with the 12 quartic points
	
	
	
validImages := {@@};
 for pl in Places(Cp,4) do
      D := Divisor(pl) - Degree(pl)*basePt;
      if Inverse(mPic)(D) in global then
        validImages := 
        validImages join {@Inverse(mPic)(D)@};
      end if;
end for;

"The rational places all lift to Q, and",  #validImages, "of the other places are in the image of Abel--Jacobi"; // 2
// So the only quartic points are the cusps (2 Galois orbits).



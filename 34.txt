
p:=3;
F := FiniteField(p);  
R<u,v>:=PolynomialRing(F,2);
pol := v^10 + (u - 1)*(u^4 + u^3 + u^2 - 4)*v^9
        + (8*u^5 - u^4 - 5*u^3 + u^2 - 12*u + 6)*v^8
        + (u - 1)*(5*u^6 + 3*u^5 + 19*u^4 + 18*u^3 - 2*u^2 + 7*u - 4)*v^7
        - (u^8 - 24*u^7 - 2*u^6 - 7*u^5 + 36*u^3 - 8*u^2 - 1)*v^6
        + u*(u^9 + u^8 - 7*u^7 + 40*u^6 + 26*u^5 + 2*u^4 + 8*u^3 - 29*u^2 - 3*u + 5)*v^5
        + u*(2*u^9 + 4*u^8 - 5*u^7 + 35*u^6 + 37*u^5 + 5*u^4 + 12*u^3 - 6*u^2 - 5*u + 2)*v^4
        + u^3*(u + 1)*(u^6 + 3*u^5 + 4*u^4 + 24*u^3 + 5*u^2 + 2*u + 3)*v^3
        + u^2*(u + 1)*(2*u^6 + 8*u^5 + 8*u^4 + 2*u^3 - u + 1)*v^2
        + u^3*(u + 1)^2*(u^4 + 3*u^3 - 2*u^2 + u - 1)*v
        - u^5*(u + 1)^2;
A2<u,v> := AffineSpace(F,2);
X := Curve(A2,pol);
#Places(X,1); // 16; We know that there are 16 cusps
#Places(X,2); // 0
#Places(X,3); // 0
#Places(X,4); // 26 (fails :()



load "functions.m";
F := Rationals();  
R<u,v>:=PolynomialRing(F,2);
pol := v^10 + (u - 1)*(u^4 + u^3 + u^2 - 4)*v^9
        + (8*u^5 - u^4 - 5*u^3 + u^2 - 12*u + 6)*v^8
        + (u - 1)*(5*u^6 + 3*u^5 + 19*u^4 + 18*u^3 - 2*u^2 + 7*u - 4)*v^7
        - (u^8 - 24*u^7 - 2*u^6 - 7*u^5 + 36*u^3 - 8*u^2 - 1)*v^6
        + u*(u^9 + u^8 - 7*u^7 + 40*u^6 + 26*u^5 + 2*u^4 + 8*u^3 - 29*u^2 - 3*u + 5)*v^5
        + u*(2*u^9 + 4*u^8 - 5*u^7 + 35*u^6 + 37*u^5 + 5*u^4 + 12*u^3 - 6*u^2 - 5*u + 2)*v^4
        + u^3*(u + 1)*(u^6 + 3*u^5 + 4*u^4 + 24*u^3 + 5*u^2 + 2*u + 3)*v^3
        + u^2*(u + 1)*(2*u^6 + 8*u^5 + 8*u^4 + 2*u^3 - u + 1)*v^2
        + u^3*(u + 1)^2*(u^4 + 3*u^3 - 2*u^2 + u - 1)*v
        - u^5*(u + 1)^2;
A2<u,v> := AffineSpace(F,2);
X := Curve(A2,pol);
P<[t]> := ProjectiveSpace(F,20); 
Xp := ProjectiveClosure(X);
  torsData := {@@};
  for p in [3,5] do     
      invs := Invariants(ClassGroup(Curve(Reduction(X,p))));
      torsData := torsData join {@invs@};
      <p,invs>;
  end for;